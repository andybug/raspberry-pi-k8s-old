---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: system
  source:
    path: argocd/system/argocd
    repoURL: git@git.andybug.com:andy/k8s0.git
    targetRevision: HEAD
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
spec:
  destination:
    namespace: metallb-system
    server: https://kubernetes.default.svc
  project: system
  source:
    path: argocd/system/metallb
    repoURL: git@git.andybug.com:andy/k8s0.git
    targetRevision: HEAD
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
spec:
  project: system
  source:
    repoURL: 'https://helm.traefik.io/traefik'
    targetRevision: 9.11.0
    helm:
      values: |-
        deployment:
          podAnnotations:
            linkerd.io/inject: enabled
        additionalArguments:
          - "--providers.kubernetesingress.ingressclass=traefik-lb"
          - "--metrics.prometheus"
    chart: traefik
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: traefik
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
spec:
  destination:
    namespace: longhorn
    server: https://kubernetes.default.svc
  project: system
  source:
    chart: longhorn
    repoURL: https://charts.longhorn.io
    targetRevision: 1.1.0
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: linkerd-bootstrap
spec:
  project: system
  source:
    repoURL: 'git@git.andybug.com:andy/k8s0.git'
    path: argocd/system/linkerd-bootstrap
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: linkerd
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: linkerd
spec:
  project: system
  source:
    repoURL: 'https://helm.linkerd.io/stable'
    targetRevision: 2.9.1
    helm:
      values: |
        global:
          identityTrustAnchorsPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBljCCATygAwIBAgIRAMGP4oqHSMbD66Gd9FOoOY4wCgYIKoZIzj0EAwIwKTEn
            MCUGA1UEAxMeaWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMB4XDTIwMTIz
            MDE2MDkxMFoXDTI1MTIyOTE2MDkxMFowKTEnMCUGA1UEAxMeaWRlbnRpdHkubGlu
            a2VyZC5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEqRlM
            xWDMb4mzoSCuAn11Av+K3a6COCk2Q90qTR/QcithJsHJUdXv1esWyJJet065SQAj
            c1NnKCcH1rg5qYlyq6NFMEMwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYB
            Af8CAQEwHQYDVR0OBBYEFG23mnI905Bje1zJx8CJgOqiQ2hdMAoGCCqGSM49BAMC
            A0gAMEUCIC2AVn3yVTrvBeoQon0Hqs9e2bArYfuZNqz4VIHAmNh6AiEApY8UOlj4
            Cqg6YpK+cjvootZdl0yHeSH0XogyIPCoAfM=
            -----END CERTIFICATE-----

        identity:
          issuer:
            scheme: kubernetes.io/tls
            crtExpiry: 2025-12-29T16:09:10Z

        installNamespace: false
    chart: linkerd2
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: linkerd
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
spec:
  project: system
  source:
    repoURL: 'https://helm.releases.hashicorp.com'
    targetRevision: 0.8.0
    helm:
      values: |
        global:
          tlsDisable: false

        injector:
          enabled: false

        server:
          annotations:
            linkerd.io/inject: enabled

          extraEnvironmentVars:
            VAULT_CACERT: /vault/userconfig/vault-server-tls/vault.ca

          extraVolumes:
          - type: secret
            name: vault-server-tls

          dataStorage:
            size: 10Gi
            storageClass: longhorn

          standalone:
            config: |
                ui = true

                listener "tcp" {
                  address = "[::]:8200"
                  cluster_address = "[::]:8201"
                  tls_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
                  tls_key_file  = "/vault/userconfig/vault-server-tls/vault.key"
                  tls_client_ca_file = "/vault/userconfig/vault-server-tls/vault.ca"
                }

                storage "file" {
                  path = "/vault/data"
                }

        ui:
          enabled: true
    chart: vault
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: vault
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
spec:
  project: system
  source:
    repoURL: 'https://charts.jetstack.io'
    targetRevision: v1.1.0
    helm:
      values: 'installCRDs: true'
    chart: cert-manager
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: cert-manager
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-issuers
spec:
  project: system
  source:
    repoURL: 'git@git.andybug.com:andy/k8s0.git'
    path: argocd/system/cert-manager-issuers
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: cluster-manager
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: system-ingresses
spec:
  project: system
  source:
    repoURL: 'git@git.andybug.com:andy/k8s0.git'
    path: argocd/system/ingresses
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
spec:
  project: system
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 12.8.0
    helm:
      values: |
        alertmanager:
          ingress:
            enabled: true
            annotations:
              traefik.ingress.kubernetes.io/router.tls: "true"
            hosts:
              - alertmanager.k8s0.weirwd.net
            tls:
              - secretName: alertmanager-k8s0-weirwd-net-tls
                hosts:
                  - alertmanager.k8s0.weirwd.net
          alertmanagerSpec:
            podMetadata:
              annotations:
                linkerd.io/inject: enabled
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 1Gi

        grafana:
          podAnnotations:
            linkerd.io/inject: enabled
          ingress:
            enabled: true
            annotations:
              traefik.ingress.kubernetes.io/router.tls: "true"
            hosts:
              - grafana.k8s0.weirwd.net
            tls:
              - secretName: grafana-k8s0-weirwd-net-tls
                hosts:
                  - grafana.k8s0.weirwd.net

        kubeApiServer:
          enabled: false

        kubeControllerManager:
          enabled: false

        kubeEtcd:
          enabled: false

        kubeStateMetrics:
          enabled: false

        prometheus:
          ingress:
            enabled: true
            annotations:
              traefik.ingress.kubernetes.io/router.tls: "true"
            hosts:
              - prometheus.k8s0.weirwd.net
            tls:
              - secretName: prometheus-k8s0-weirwd-net-tls
                hosts:
                  - prometheus.k8s0.weirwd.net
          prometheusSpec:
            # FIXME this is bugged -- fixed in next version
            # podMetadata:
            #   annotations:
            #     linkerd.io/inject: enabled
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi

        prometheusOperator:
          admissionWebhooks:
            patch:
              enabled: false
    chart: kube-prometheus-stack
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: prometheus
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sealed-secrets
spec:
  project: system
  source:
    repoURL: 'https://bitnami-labs.github.io/sealed-secrets'
    targetRevision: 1.13.2
    chart: sealed-secrets
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: sealed-secrets
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: external-dns
# spec:
#   destination:
#     namespace: external-dns
#     server: https://kubernetes.default.svc
#   project: system
#   source:
#     path: argocd/system/external-dns
#     repoURL: git@git.andybug.com:andy/k8s0.git
#     targetRevision: HEAD
