---
- name: hostname
  hostname:
    name: '{{ inventory_hostname }}'
  tags:
    - ubuntu:hostname

- name: hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1.*{{ inventory_hostname }}'
    line: '127.0.1.1 {{ inventory_hostname }} {{ inventory_hostname.split(".")[0] }}'
  tags:
    - ubuntu:hostname

- name: apt upgrade
  import_tasks: update.yaml
  tags:
    - never
    - ubuntu:upgrade
    - ubuntu:apt
    - ubuntu:packages

- name: install apt packages
  apt:
    name: '{{ ubuntu_apt_packages }}'
    state: '{{ ubuntu_apt_packages_state }}'
  tags:
    - ubuntu:apt
    - ubuntu:packages

- name: create and configure users
  tags:
    - ubuntu:users
  block:
    - name: user
      ansible.builtin.user:
        name: '{{ item.name }}'
        create_home: yes
        group: '{{ item.group | default(ubuntu_users_default_group) }}'
        password_lock: yes
        shell: '{{ item.shell | default(ubuntu_users_default_shell) }}'
        state: '{{ item.state | default("present") }}'
        system: no
      loop: '{{ cluster_users }}'

    - name: groups
      ansible.builtin.user:
        name: '{{ item.name }}'
        append: yes
        groups: '{{ item.groups }}'
      when: item.groups is defined
      loop: '{{ cluster_users }}'

    - name: authorized_keys
      ansible.posix.authorized_key:
        user: '{{ item.name }}'
        state: '{{ item.state | default("present") }}'
        key: '{{ item.key }}'
      when: item.key is defined
      loop: '{{ cluster_users }}'

    - name: sudoers
      ansible.builtin.copy:
        dest: '/etc/sudoers.d/50-{{ item.name }}'
        content: |
          {{ item.name }} ALL=(ALL) NOPASSWD:ALL
      when: item.admin is defined and item.admin
      loop: '{{ cluster_users }}'

- name: disable unattended-upgrades
  ansible.builtin.systemd:
    name: unattended-upgrades
    enabled: no
    state: stopped
